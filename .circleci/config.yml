# CircleCI 2.1 Config Overview: https://discuss.circleci.com/t/circleci-2-1-config-overview/26057
version: 2.1

orbs:
  node: circleci/node@1.0.1

jobs:
  build:
    docker:
      - image: circleci/node:8.12 # though we use 8.9 only 8.12 has npm that supports npm ci

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout

      - run:
          name: Setup dirs
          command: mkdir -p $TEST_RESULTS

      - node/with-cache:
          cache-key: package-lock.json
          cache-version: v3
          steps:
            - run:
                name: Install deps
                command: |
                  if [ ! -d node_modules ]; then
                    npm ci
                  else
                    echo "node_modules from cache exist. So skipping install."
                  fi

            - run:
                name: JavaScript Linter
                command: npm run lint -- --format junit -o "$TEST_RESULTS/js-lint-results.xml"

            - run:
                name: JS Test Suite
                command: |
                  export JEST_JUNIT_OUTPUT="$TEST_RESULTS/junit/js-test-results.xml"
                  npm test -- --ci --maxWorkers=12

      - store_test_results:
          path: /tmp/test-results

      - store_artifacts:
          path: /tmp/test-results

  deploy:
    docker:
      - image: circleci/python:2.7

    steps:
      - run:
          name: Check if Sly Master Repo
          command: |
            if [[ $CIRCLE_PROJECT_USERNAME != "seniorly" ]]; then
              echo "Skipping Deployment since this is not a Sly Master Build"
              circleci step halt
            fi
      - checkout
      - run:
          name: Install awscli
          command: |
            sudo pip install awsebcli --upgrade
      - run:
          name: Choosing EB_ENV
          command: |
            export LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
            export LATEST_COMMIT=$(git rev-parse --short HEAD)
            export NUMBER_OF_COMMITS=$(git rev-list --count HEAD ^$LATEST_TAG)
            git for-each-ref --format="%(refname:short)-$NUMBER_OF_COMMITS-$LATEST_COMMIT" --sort=-authordate --count=1 refs/tags > ./VERSION
            cat ./VERSION
            git add ./VERSION

            if [[ -n "$CIRCLE_TAG" ]]; then
              echo $CIRCLE_TAG > ./VERSION
              cat ./VERSION
              git add ./VERSION
              echo "export EB_ENV=slyreact-staging" >> $BASH_ENV
              EB_ENV=slyreact-staging
            elif [[ "$CIRCLE_BRANCH" = "master" ]]; then
              echo "export EB_ENV=slyreact-development" >> $BASH_ENV
              EB_ENV=slyreact-development
            else
              FEATURE_ENV=$(eb list | grep -w "$CIRCLE_BRANCH" || true)
              if [[ "$FEATURE_ENV" = "slyreact-prod" || "$FEATURE_ENV" = "slyreact-staging" ]]; then
                echo "Tried to deploy to restricted env"
                echo $FEATURE_ENV
                return -1
              fi
              echo "export EB_ENV=$FEATURE_ENV" >> $BASH_ENV
              EB_ENV=$FEATURE_ENV
            fi

            if [[ -z "$EB_ENV" ]]; then
              circleci step halt
            fi

      # TODO: remove once circle ci starts supporting customizable notifications in workflows
      - run:
          name: Send deploy start notification
          command: |
            export DESC_MSG=$(./.circleci/generate-deploy-status-message.sh)
            ./.circleci/push-slack-notification.sh -t "Starting deploy to $EB_ENV" \
              -tl "$CIRCLE_BUILD_URL" -m "$DESC_MSG" -c "#66d3e4"

      - run:
          name: Deploy to EB
          command: |
            export V=$(cat ./VERSION)
            echo "Deploying to $EB_ENV"
            eb use $EB_ENV
            export DEPLOY_FAILED=$(eb deploy $EB_ENV --timeout 30 -v --staged -l $V | tee /dev/tty | grep -c "ERROR")

            if [ "$DEPLOY_FAILED" -gt 0 ]; then
              exit 1
            fi

      # TODO: remove once circle ci starts supporting customizable notifications in workflows
      - run:
          name: Send deploy success notification
          command: |
            export DESC_MSG=$(./.circleci/generate-deploy-status-message.sh)
            ./.circleci/push-slack-notification.sh -t "Successfully deployed to $EB_ENV" \
              -tl "$CIRCLE_BUILD_URL" -m "$DESC_MSG" -c "#42c88a"
      - run:
          name: Send deploy failed notification
          when: on_fail
          command: |
            export DESC_MSG=$(./.circleci/generate-deploy-status-message.sh)
            ./.circleci/push-slack-notification.sh -t "Failed deploying to $EB_ENV" \
              -tl "$CIRCLE_BUILD_URL" -m "$DESC_MSG" -c "#ed5c5c"

workflows:
  version: 2
  build-development:
    jobs:
      # run build (unit tests, linting, quality checks etc etc) for PRs
      - build
      - deploy:
          context: ReactDev
          requires:
            - build
  build-staging:
    jobs:
      - build:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy:
          context: ReactStaging
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
